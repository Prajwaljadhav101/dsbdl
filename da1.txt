import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import datasets 

df = pd.read_csv('HousingData.csv')

df

df.info()

df.describe()

df.keys()

df.isnull().sum()

df['CRIM'].fillna(df['CRIM'].mean(),inplace=True)
df['ZN'].fillna(df['ZN'].mean(),inplace=True)
df['INDUS'].fillna(df['INDUS'].mean(),inplace=True)
df['CHAS'].fillna(df['CHAS'].mean(),inplace=True)
df['AGE'].fillna(df['AGE'].mean(),inplace=True)
df['LSTAT'].fillna(df['LSTAT'].mean(),inplace=True)

from sklearn.model_selection import train_test_split

X = df.iloc[:,0:13]

y = df.iloc[:,-1]

# X_train, X_test, y_train, y_test = train_test_split(
# ...     X, y, test_size=0.33, random_state=42)
x_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.2,random_state = 20)

x_train

from sklearn.linear_model import LinearRegression
lr = LinearRegression()
model = lr.fit(x_train, y_train)

y_pred = model.predict(x_test) 

 for i, j in zip(y_test, y_pred):
    print(i,"  ", j)

from sklearn.metrics import mean_squared_error,accuracy_score
mse = mean_squared_error(y_test, y_pred)

mse

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.3,random_state = 20)

x_train

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(x_train,y_train)

y_pred = lr.predict(x_test)

from sklearn.metrics import mean_squared_error,mean_absolute_error, r2_score
mse = mean_squared_error(y_pred,y_test)
rmse=np.sqrt(mse)
msa = mean_absolute_error(y_pred,y_test)
r2 = r2_score(y_pred,y_test)

mse

msa

rmse

r2